#!/usr/bin/env bash

set -x

<%-
working_dir_host = '${PWD}'
working_dir_container = working_dir_host
%>

#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="<%= working_dir_container %>/bin/auth"

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="<%= working_dir_container %>/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "<%= working_dir_host %>/rsession.sh" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="<%= working_dir_container %>/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"

  source "<%= working_dir_container %>/.env"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "<%= working_dir_host %>/rsession.sh"

# Set working directory to home directory
cd "${HOME}"

# Output debug info
hostname

set -x
# Launch the RStudio Server
echo "Starting up rserver..."

# Dump environment without functions for use in rsession.sh, filtering readonly variables
(set -o posix; set) | grep -vP '^(BASHOPTS|BASH_VERSINFO|EUID|PPID|SHELLOPTS|UID)' > "<%= working_dir_host %>/.env"

singularity run -B "$TMPDIR:/tmp" \
  "$RSTUDIO_SERVER_IMAGE" \
  --www-port "${port}" \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}"
